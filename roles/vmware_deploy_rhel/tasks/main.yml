---

# - name: Get template 
#   vmware.vmware_rest.vcenter_vmtemplate_libraryitems_info:
#     #template_library_item: RHEL #"{{ vm_template }}"
#     #vcenter_validate_certs: false
#   register: template_info

- name: List Local Content Library
  vmware.vmware_rest.content_locallibrary_info:
    library_id: "RHEL Templates"
  register: my_content_library

- name: Get cluster info
  vmware.vmware_rest.vcenter_cluster_info:
    filter_names:
    - "{{ vm_cluster }}"
  register: cluster_info

- name: Get Resource info for {{ vm_cluster }}
  vmware.vmware_rest.vcenter_cluster_info:
    cluster: "{{ cluster_info.value[0].cluster }}"
  register: resource_pool_info

- name: Get datastore info
  vmware.vmware_rest.vcenter_datastore_info:
    filter_names:
    - "{{ vm_datastore }}"
  register: datastore_info

- name: Get folder info
  vmware.vmware_rest.vcenter_folder_info:
    filter_names:
    - '{{ vm_folder }}'
  register: folder_info

- name: Set facts
  set_fact:
    #source_vm_id: "{{ template_info.value[0].vm }}"
    cluster_id: '{{ cluster_info.value[0].cluster }}'
    datastore_id: '{{ datastore_info.value[0].datastore }}'
    folder_id: '{{ folder_info.value[0].folder }}'

- name: Clone from template
  vmware.vmware_rest.vcenter_vm:
    placement:
      cluster: "{{ cluster_id }}"
      datastore: "{{ datastore_id }}"
      folder: "{{ folder_id }}"
    name: "{{ vm_name }}"
    guest_OS: "RHEL_8_64"
    cpu:
      hot_add_enabled: true
      count: "{{ vm_cpu }}"
    memory:
      hot_add_enabled: true
      size_MiB: "{{ vm_ram }}"
    #source: "{{ source_vm_id }}"
    source: "{{ vm_template }}"
    state: clone
    power_on: yes
    # power_on: no

# - name: Sleep for 20 seconds and continue with play
#   wait_for:
#     timeout: 20
# 
# - name: Get VM instance details
#   vmware.vmware_rest.vcenter_vm_info:
#     filter_names:
#     - "{{ vm_name }}"
#   register: vm_info_new
# 
# - name: Customize the VM
#   vmware.vmware_rest.vcenter_vm_guest_customization:
#     vm: "{{ vm_info_new.value[0].vm }}"
#     #vm: "{{ lookup('vmware.vmware_rest.vm_moid', 'DC1/vm/rhel-1') }}"
#     configuration_spec:
#       linux_config:
#         domain: "local"
#         hostname:
#           fixed_name: "{{ vm_name }}"
#           type: FIXED
#     interfaces:
#     - adapter:
#         ipv4:
#           type: STATIC
#           gateways:
#           - 192.168.1.1
#           ip_address: "{{ vm_ip }}"
#           prefix: 24
#     global_DNS_settings:
#       dns_suffix_list: []
#       dns_servers:
#       - 192.168.1.31
#   become: true
# 
# - name: Start the VM
#   vmware.vmware_rest.vcenter_vm_power:
#     state: start
#     vm: "{{ vm_info_new.value[0].vm }}"

- name: Wait until SSH port is UP
  ansible.builtin.wait_for:
    port: 22
    host: "{{ vm_ip }}"
    #search_regex: OpenSSH
    delay: 20
  vars:
    ansible_connection: local
  ignore_errors: true

- name: Sleep for 60 seconds and continue with play
  wait_for:
    timeout: 60
